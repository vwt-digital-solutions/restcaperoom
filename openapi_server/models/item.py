# coding: utf-8

from __future__ import absolute_import
from datetime import date, datetime  # noqa: F401

from typing import List, Dict  # noqa: F401

from openapi_server.models.base_model_ import Model
from openapi_server import util


class Item(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, type=None, color=None):  # noqa: E501
        """Item - a model defined in OpenAPI

        :param type: The type of this Item.  # noqa: E501
        :type type: str
        :param color: The color of this Item.  # noqa: E501
        :type color: str
        """
        self.openapi_types = {
            'type': str,
            'color': str
        }

        self.attribute_map = {
            'type': 'type',
            'color': 'color'
        }

        self._type = type
        self._color = color

    @classmethod
    def from_dict(cls, dikt) -> 'Item':
        """Returns the dict as a model

        :param dikt: A dict.
        :type: dict
        :return: The item of this Item.  # noqa: E501
        :rtype: Item
        """
        return util.deserialize_model(dikt, cls)

    @property
    def type(self):
        """Gets the type of this Item.


        :return: The type of this Item.
        :rtype: str
        """
        return self._type

    @type.setter
    def type(self, type):
        """Sets the type of this Item.


        :param type: The type of this Item.
        :type type: str
        """

        self._type = type

    @property
    def color(self):
        """Gets the color of this Item.


        :return: The color of this Item.
        :rtype: str
        """
        return self._color

    @color.setter
    def color(self, color):
        """Sets the color of this Item.


        :param color: The color of this Item.
        :type color: str
        """

        self._color = color
